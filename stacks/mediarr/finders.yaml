services:
  gluetun_finders:
    image: qmcgaw/gluetun:latest
    pull_policy: ${pull_policy}
    container_name: ${gluetun_finders_container_name}
    restart: ${restart}
    networks:
      mediarr:
        ipv4_address: 10.20.20.15
    ports:
      - ${flaresolverr_port}:${flaresolverr_port}
      - ${prowlarr_port_ui}:${prowlarr_port_ui}
      - ${jellyseerr_port_ui}:${jellyseerr_port_ui}
      - ${radarr_port_ui}:${radarr_port_ui}
      - ${sonarr_port_ui}:${sonarr_port_ui}
      - ${lidarr_port_ui}:${lidarr_port_ui}
      - ${notifiarr_port_ui}:${notifiarr_port_ui}
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
      - VPN_SERVICE_PROVIDER=protonvpn
      - VPN_TYPE=wireguard
      - VPN_PORT_FORWARDING=on
      - GLUETUN_HTTP_CONTROL_SERVER_ENABLE=on
      - WIREGUARD_PRIVATE_KEY=${MEDIARR_WG_PRIVATE_KEY_FINDERS}
      - WIREGUARD_ADDRESSES=${MEDIARR_WG_ADDRESSES}
      - SERVER_COUNTRIES=United States
    volumes:
      - /docker/${gluetun_finders_container_name}/config:/gluetun
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun

  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    pull_policy: ${pull_policy}
    container_name: ${flaresolverr_container_name}
    restart: ${restart}
    depends_on:
      - gluetun_downloaders
    network_mode: "service:gluetun_finders"
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ=America/Chicago

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    pull_policy: ${pull_policy}
    container_name: ${prowlarr_container_name}
    restart: ${restart}
    depends_on:
      - gluetun_finders
      - flaresolverr
      - qbittorrent
      - sabnzbd
    network_mode: "service:gluetun_finders"
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
    volumes:
      - /docker/prowlarr/config:/config

  jellyseerr:
    image: ghcr.io/fallenbagel/jellyseerr:latest
    pull_policy: ${pull_policy}
    container_name: ${jellyseerr_container_name}
    restart: ${restart}
    depends_on:
      - gluetun_finders
      - jellyfin
      - radarr
      - sonarr
    init: true
    network_mode: "service:gluetun_finders"
    environment:
      - LOG_LEVEL=debug
      - TZ=America/Chicago
      - PORT=5055
    volumes:
      - /docker/jellyseerr/config:/app/config
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:5055/api/v1/status || exit 1
      start_period: 20s
      timeout: 3s
      interval: 15s
      retries: 3

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    pull_policy: ${pull_policy}
    container_name: ${radarr_container_name}
    restart: ${restart}
    depends_on:
      - gluetun_finders
      - prowlarr
    network_mode: "service:gluetun_finders"
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
    volumes:
      - /docker/radarr/config:/config
      - /docker/downloads:/docker/downloads
      - qb_downloads:/docker/downloads/torrent
      - media_movies:/movies

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    pull_policy: ${pull_policy}
    container_name: ${sonarr_container_name}
    restart: ${restart}
    depends_on:
      - gluetun_finders
      - prowlarr
    network_mode: "service:gluetun_finders"
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
    volumes:
      - /docker/sonarr/config:/config
      - /docker/downloads:/docker/downloads
      - qb_downloads:/docker/downloads/torrent
      - media_tvshows:/tv

  lidarr:
    image: lscr.io/linuxserver/lidarr:latest
    pull_policy: ${pull_policy}
    container_name: ${lidarr_container_name}
    restart: ${restart}
    depends_on:
      - gluetun_finders
      - prowlarr
    network_mode: "service:gluetun_finders"
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
    volumes:
      - /docker/lidarr/config:/config
      - /docker/downloads:/docker/downloads
      - qb_downloads:/docker/downloads/torrent
      - media_music:/music

  notifiarr:
    image: golift/notifiarr:latest
    pull_policy: ${pull_policy}
    container_name: ${notifiarr_container_name}
    restart: ${restart}
    depends_on:
      - gluetun_finders
    network_mode: "service:gluetun_finders"
    volumes:
      - /docker/notifiarr/config:/config
      - /var/run/utmp:/var/run/utmp
      - /etc/machine-id:/etc/machine-id