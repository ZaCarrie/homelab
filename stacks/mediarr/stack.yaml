---
networks:
  mediarr:
    driver: bridge
    enable_ipv6: false
    ipam:
      driver: default
      config:
        - subnet: 10.20.20.0/24

volumes:
  media_tvshows:
    driver: local
    driver_opts:
      type: nfs
      o: ${NFS_O}
      device: ":${NFS_DEVICE_MEDIA}/tvshows"
  media_movies:
    driver: local
    driver_opts:
      type: nfs
      o: ${NFS_O}
      device: ":${NFS_DEVICE_MEDIA}/movies"
  qbittorrent_downloads:
    driver: local
    driver_opts:
      type: nfs
      o: ${NFS_O}
      device: ":${NFS_DEVICE}/${qbittorrent_container_name}/downloads"



#secrets:

services:
  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest@sha256:dc7e75b48d038185216e00029c60a7860c557a0563811934d4870c875467ea8a
    pull_policy: ${pull_policy}
    container_name: ${jellyfin_container_name}
    restart: ${restart}
    networks:
      mediarr:
        ipv4_address: 10.20.20.5
    ports:
      - ${jellyfin_port_8096}:8096
    environment: 
      - UID=1000
      - GID=1000
      - TZ=America/Chicago
    volumes:
      - /docker/jellyfin/config:/config
      - media_tvshows:/data/tvshows
      - media_movies:/data/movies
    devices:
      - /dev/dri:/dev/dri

  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    pull_policy: ${pull_policy}
    container_name: ${flaresolverr_container_name}
    restart: ${restart}
    networks:
      mediarr:
        ipv4_address: 10.20.20.15
    ports:
      - ${flaresolverr_port_8191}:8191
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ=America/Chicago

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    pull_policy: ${pull_policy}
    container_name: ${qbittorrent_container_name}
    restart: ${restart}
    networks:
      mediarr:
        ipv4_address: 10.20.20.20
    ports:
      - ${qbittorrent_port_8080}:8080
      - ${qbittorrent_port_6881}:6881
      - ${qbittorrent_port_6881}:6881/udp
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
      - WEBUI_PORT=8080
      - TORRENTING_PORT=6881
    volumes:
      - /docker/qbittorrent/config:/config
      - qbittorrent_downloads:/downloads

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    pull_policy: ${pull_policy}
    container_name: ${prowlarr_container_name}
    restart: ${restart}
    depends_on:
      - flaresolverr
      - qbittorrent
    networks:
      mediarr:
        ipv4_address: 10.20.20.10
    ports:
      - ${prowlarr_port_9696}:9696
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
    volumes:
      - /docker/prowlarr/config:/config

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    pull_policy: ${pull_policy}
    container_name: ${radarr_container_name}
    restart: ${restart}
    depends_on:
      - prowlarr
    networks:
      mediarr:
        ipv4_address: 10.20.20.25
    ports:
      - ${radarr_port_7878}:7878
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
    volumes:
      - /docker/radarr/config:/config
      - media_movies:/movies
      - qbittorrent_downloads:/downloads

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    pull_policy: ${pull_policy}
    container_name: ${sonarr_container_name}
    restart: ${restart}
    depends_on:
      - prowlarr
    networks:
      mediarr:
        ipv4_address: 10.20.20.30
    ports:
      - ${sonarr_port_8989}:8989
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
    volumes:
      - /docker/sonarr/config:/config
      - media_tvshows:/tv
      - qbittorrent_downloads:/downloads

  notifiarr:
    image: golift/notifiarr:latest
    pull_policy: ${pull_policy}
    container_name: ${notifiarr_container_name}
    restart: ${restart}
    networks:
      mediarr:
        ipv4_address: 10.20.20.35
    ports:
      - ${notifiarr_port_5454}:5454
    volumes:
      - /docker/notifiarr/config:/config
      - /var/run/utmp:/var/run/utmp
      - /etc/machine-id:/etc/machine-id

  jellyseerr:
    image: ghcr.io/fallenbagel/jellyseerr:latest
    pull_policy: ${pull_policy}
    container_name: ${jellyseerr_container_name}
    restart: ${restart}
    depends_on:
      - jellyfin
      - radarr
      - sonarr
    init: true
    networks:
      mediarr:
        ipv4_address: 10.20.20.40
    ports:
      - ${jellyseerr_port_5055}:5055
    environment:
      - LOG_LEVEL=debug
      - TZ=America/Chicago
      - PORT=5055
    volumes:
      - /docker/jellyseerr/config:/app/config
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:5055/api/v1/status || exit 1
      start_period: 20s
      timeout: 3s
      interval: 15s
      retries: 3



